import os
from typing import List, Tuple

import chromadb
import torch
from chromadb.config import Settings
from transformers import AutoModel, AutoTokenizer

CHROMA_PATH = "./chroma/examples"
EXAMPLES = [
    {
        "input": """## Nome do Documento
PUBLICA√á√ÉO DE HOMOLOGA√á√ÉO DE PREG√ÉO ELETR√îNICO N¬∫ PMC 89/2023

## Texto do Documento
MUNIC√çPIO DE CANOINHAS

Compras e Contratos

Termo Adjudica√ß√£o - Homologa√ß√£o e Adjudica√ß√£o

P√°g 1 / 1

IPM Sistemas Ltda

Atende.Net - WCO v:2015.04

Identificador: WCO901201-31008-RKWCEFIAEPXQ-8 - Emitido por: DAVI HINKE SOARES 26/01/2024 10:50:39 -03:00

TERMO DE HOMOLOGA√á√ÉO E ADJUDICA√á√ÉO

01 - Homologar e Adjudicar a presente Licita√ß√£o nestes termos:

Nr. Processo: 3706/2023

Nr. Licita√ß√£o: 89/2023

Modalidade: Preg√£o Eletr√¥nico

Tipo Concorr√™ncia: Registro de Pre√ßos

Data da homologa√ß√£o: 26/01/2024

Objeto da Licita√ß√£o: REGISTRO DE PRE√áOS PARA FORNECIMENTO, COLOCA√á√ÉO DE UMA 

QUANTIDADE ESTIMADA DE 1.700 METROS LINEARES DE MURO PR√â 

FABRICADO COM ALTURA DE 2,05M, DESTINADOS AS DIVERSAS 

SECRETARIAS, FUNDOS E FUNDA√á√ïES MUNICIPAIS, CORPO DE BOMBEIROS, 

POL√çCIA MILITAR E CIVIL.

02 - Fornecedores:

10053 - CIMENTELA IND DE TELAS E ARTEF.DE CONCRETO LTDA ME - 78.527.645/0001-74

Sem Lote

Item Produto Unidade Marca Quantidade Valor Unit√°rio Valor Total

1 MURO PR√â- FABRICADO M PROPRIA  

PR√â-

FABRICADO

1700 R$371,00 R$630.700,00

Total do Lote: R$630.700,00

Total do Fornecedor: R$630.700,00

03 -  Autorizar a emiss√£o da(s) nota(s) de empenho correspondente(s):

Canoinhas, 26 de janeiro de 2024.

___________________________________

RAFAEL ROTTILI ROEDER

Secret√°rio de Planejamento
""",
        "output": """{
    "tipo_do_documento": "Homologa√ß√£o",
    "numero_do_processo_licitat√≥rio": "3706/2023",
    "munic√≠pio": "Canoinhas",
    "modalidade": "Preg√£o",
    "formato_da_modalidade": "Eletr√¥nico",
    "n√∫mero_da_modalidade": "89/2023",
    "objeto": "MURO PR√â- FABRICADO M PROPRIA",
    "data_de_abertura": null,
    "site_do_edital": null,
    "signat√°rio": RAFAEL ROTTILI ROEDER",
    "cargo_do_signat√°rio": "Secret√°rio de Planejamento"
}""",
    },
    {
        "input": """## Nome do Documento
AVISO DE LICITA√á√ÉO PREG√ÉO ELETR√îNICO N¬∫ 6/2023 FUMSCI

## Texto do Documento
PREFEITURA DE NAVEGANTES ‚Äì

PREG√ÉO ELETRONICO N¬∫ 6/2023 FUMSCI 

Comunicamos na forma da lei 8.666/93 e suas altera√ß√µes, que se encontra aberto o processo licitat√≥rio do objeto: Preg√£o Eletr√¥nico para Registro de Pre√ßo visando a contrata√ß√£o de empresa especializada em presta√ß√£o de servi√ßo na manuten√ß√£o corretiva, preventiva e est√©tica na √°rea mec√¢nica, funilaria, pintura(c/adesiva√ß√£o), el√©trica(eletr√¥nica), tape√ßaria e borracharia de ve√≠culos automotores com fornecimento e substitui√ß√£o de pe√ßas, materiais e acess√≥rios em estado novo, originais dos fabricantes das marcas dos ve√≠culos e com desconto de 5% (cinco por cento) sobre os pre√ßos das tabelas e cat√°logos dos fabricantes ou revendas autorizadas, para atender a manuten√ß√£o da frota das Secretarias, Fundos, Funda√ß√µes, Pol√≠cia Militar e Corpo de Bombeiros Militar de Navegantes. Interessados dever√£o cadastrar-se no site 

http://bnc.org.br/cadastro/. 

Entrega das propostas a partir do dia 19/05/2023 at√© √†s 13h30 do dia 31/05/2023. In√≠cio da sess√£o em meio eletr√¥nico √†s 14

h00 do dia 31/05/2023. O edital se encontra √† disposi√ß√£o na Rua Jo√£o Em√≠lio n¬∫ 100, Navegantes/SC e no site: 

www.navegantes.sc.gov.br link fornecedor. Libardoni Fronza ‚Äì Prefeito.
""",
        "output": """{
    "tipo_do_documento": "Aviso de Licita√ß√£o",
    "numero_do_processo_licitat√≥rio": "6/2023",
    "munic√≠pio": "Navegantes",
    "modalidade": "Preg√£o",
    "formato_da_modalidade": Eletr√¥nico,
    "n√∫mero_da_modalidade": "6/2023",
    "objeto": "Preg√£o Eletr√¥nico para Registro de Pre√ßo visando a contrata√ß√£o de empresa especializada em presta√ß√£o de servi√ßo na manuten√ß√£o corretiva, preventiva e est√©tica na √°rea mec√¢nica, funilaria, pintura(c/adesiva√ß√£o), el√©trica(eletr√¥nica), tape√ßaria e borracharia de ve√≠culos automotores com fornecimento e substitui√ß√£o de pe√ßas, materiais e acess√≥rios em estado novo, originais dos fabricantes das marcas dos ve√≠culos e com desconto de 5% (cinco por cento) sobre os pre√ßos das tabelas e cat√°logos dos fabricantes ou revendas autorizadas, para atender a manuten√ß√£o da frota das Secretarias, Fundos, Funda√ß√µes, Pol√≠cia Militar e Corpo de Bombeiros Militar de Navegantes",
    "data_de_abertura": "2023-05-31T14:00",
    "site_do_edital": "www.navegantes.sc.gov.br",
    "signat√°rio": "Libardoni Fronza",
    "cargo_do_signat√°rio": "Prefeito"
}""",
    },
    {
        "input": """## Nome do Documento
PL 55 DISPENSA DE LICITA√á√ÉO 24- 2024 - SABONETE

## Texto do Documento
MUNIC√çPIO DE IPUMIRIM

ESTADO DE SANTA CATARINA

AVISO DE DISPENSA DE LICITA√á√ÉO N¬∫ 24/2024

PROCESSO DE LICITA√á√ÉO N¬∫ 55/2024

HIL√ÅRIO REFFATTI,

PREFEITO MUNICIPAL, torna p√∫blico para conhecimento dos interessados que realizou 

 DISPENSA DE LICITA√á√ÉO, na forma da Lei n¬∫ 14.133, de 1¬∫ de abril de 2021 e Decreto Municipal N¬∫ 2.793/2023.

 

O objeto da licita√ß√£o √©: 

Aquisi√ß√£o de sabonete l√≠quido neutro para atender as necessidades da Secretaria de Educa√ß√£o, Cultura e Esportes.



. Poss√≠veis altera√ß√µes, suspens√£o, revoga√ß√£o ou anula√ß√£o do processo de dispensa ser√° disponibilizada nos endere√ßos eletr√¥nicos acima mencionados, cabendo √†s licitantes interessadas acompanhar o andamento da licita√ß√£o. 

 

Ipumirim, 30/04/2024

""",
        "output": """{
    "nome_do_documento": "Dispensa de Licita√ß√£o",
    "numero_do_processo_licitat√≥rio": "55/2024",
    "munic√≠pio": "Ipumirim",
    "modalidade": "Dispensa de Licita√ß√£o",
    "formato_da_modalidade": null,
    "n√∫mero_da_modalidade": "24/2024",
    "objeto": "Aquisi√ß√£o de sabonete l√≠quido neutro para atender as necessidades da Secretaria de Educa√ß√£o, Cultura e Esportes."
    "data_de_abertura": null,
    "site_do_edital": null,
    "signat√°rio": null,
    "cargo_do_signat√°rio": null
}""",
    },
]

ONE_SHOT = f"#Exemplos\n## Entrada\n{EXAMPLES[0]['input']} \n\n ## Sa√≠da\n{EXAMPLES[0]['output']}"
ONE_SHOT_OUT = f"#Exemplos\n# Sa√≠da\n{EXAMPLES[0]['output']}"
FEW_SHOT = f"#Exemplos\n## Entrada\n{EXAMPLES[0]['input']} \n\n ## Sa√≠da\n{EXAMPLES[0]['output']}\n\n## Entrada\n{EXAMPLES[1]['input']} \n\n ## Sa√≠da\n{EXAMPLES[1]['output']}\n\n## Entrada\n{EXAMPLES[2]['input']} \n\n ## Sa√≠da\n{EXAMPLES[2]['output']}"
FEW_SHOT_OUT = f"# Exemplos\n## Sa√≠da\n{EXAMPLES[0]['output']}\n\n## Sa√≠da\n{EXAMPLES[1]['output']}\n\n ## Sa√≠da\n{EXAMPLES[2]['output']}"
SPECIFIC_ONE_SHOT = (
    f"# Exemplos\n## Entrada\n{EXAMPLES[1]['input']}## Sa√≠da\n{EXAMPLES[1]['output']}"
)
SPECIFIC_ONE_SHOT_OUT = f"# Exemplos\n## Sa√≠da\n{EXAMPLES[1]['output']}"
SPECIFIC_FEW_SHOT = f"# Exemplos\n## Entrada\n{EXAMPLES[1]['input']}\n\n## Sa√≠da\n{EXAMPLES[1]['output']}\n\n## Entrada\n{EXAMPLES[2]['input']}\n\n## Sa√≠da\n{EXAMPLES[2]['output']}"
SPECIFIC_FEW_SHOT_OUT = (
    f"#Exemplos\n## Sa√≠da\n{EXAMPLES[1]['output']}\n\n## Sa√≠da\n{EXAMPLES[2]['output']}"
)
CHAIN_OF_THOUGHT = (
    f"Pense no passo a passo da extra√ß√£o preenchendo o campo de racioc√≠nio"
)


def get_model_and_tokenizer():
    model = AutoModel.from_pretrained("neuralmind/bert-large-portuguese-cased")
    tokenizer = AutoTokenizer.from_pretrained(
        "neuralmind/bert-large-portuguese-cased", do_lower_case=False
    )
    return model, tokenizer


def compute_embedding(text: str, model, tokenizer) -> List[float]:
    input_ids = tokenizer.encode(
        text, return_tensors="pt", truncation=True, max_length=512
    )
    with torch.no_grad():
        outputs = model(input_ids)
        encoded = outputs.last_hidden_state[0, 1:-1]
        return encoded.mean(dim=0).tolist()


def setup_chroma_client():
    return chromadb.PersistentClient(path=CHROMA_PATH)


def setup_chroma_db(examples: List[dict], model, tokenizer):
    client = setup_chroma_client()
    collection_name = "examples"

    try:
        collection = client.get_collection(collection_name)
        print("‚úÖ Collection already exists. Using existing collection.")
    except:
        print("üì¶ Creating new collection with examples.")
        collection = client.create_collection(name=collection_name)
        for i, ex in enumerate(examples):
            embedding = compute_embedding(ex["input"], model, tokenizer)
            collection.add(
                ids=[str(i)],
                documents=[ex["input"]],
                embeddings=[embedding],
                metadatas=[{"output": ex["output"]}],
            )
    return collection


def find_best_example(text: str, collection, model, tokenizer) -> Tuple[str, str, str]:
    query_embedding = compute_embedding(text, model, tokenizer)
    results = collection.query(query_embeddings=[query_embedding], n_results=1)
    best_id = results["ids"][0][0]
    best_input = results["documents"][0][0]
    best_output = results["metadatas"][0][0]["output"]
    return best_id, best_input, best_output


model, tokenizer = get_model_and_tokenizer()
collection = setup_chroma_db(EXAMPLES, model, tokenizer)


def dynamic_example(new_text):
    best_id, best_input, best_output = find_best_example(
        new_text, collection, model, tokenizer
    )
    return f"#Exemplos\n## Entrada\n{best_input} \n\n ## Sa√≠da\n{best_output}"


def dynamic_example_out(new_text):
    best_id, best_input, best_output = find_best_example(
        new_text, collection, model, tokenizer
    )
    return f"#Exemplosn\n## Sa√≠da\n{best_output}"
